#mysql 配置
#mysql.driver=com.mysql.jdbc.Driver
#mysql.url=jdbc:mysql://localhost:3306/meis_aibox?characterEncoding=utf-8
#mysql.username=root
#mysql.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/meis_aibox?characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root

#sqlserver 配置
sqlserver.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
sqlserver.url=jdbc:sqlserver://121.36.47.210:1433;databaseName=meis_server_test_zr
sqlserver.username=sa
sqlserver.password=hzzxbj2016!

#mssql.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#mssql.url=jdbc:sqlserver://192.168.2.18:1433;databaseName=meis_server;
#mssql.username=sa
#mssql.password=hzzxbj2016

spring.application.name=spring-boot-mongodb
# mongodb
spring.data.mongodb.uri=mongodb://192.168.1.40:27017/meis_server_zr
spring.data.mongodb.username=hzzx
spring.data.mongodb.password=hzzxbj2016

logpath = D:\\hzzx\\
server.port = 8083
#sever port  采集器连接端口
meissever.port=7000
#config   配置工具连接端口
config.port=7002
# java java后台连接端口
java.port = 7005
#同步服务器时间间隔，小时为单位
asyncTimeFrequency = 6

Tcptimeout = 120

#Author 闫洋洋
#Description 以下配置通为新增配置
#Date 14:42 2020/3/11

#mybatis扫描配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.hzzxkj.models
logging.level.root=ERROR

#rabbitmq
#ip
spring.rabbitmq.host=127.0.0.1
#端口
spring.rabbitmq.port=5672
#用户名
spring.rabbitmq.username=guest
#密码
spring.rabbitmq.password=guest
#指定心跳超时,单位秒,0为不指定
spring.rabbitmq.requested-heartbeat=60
#连接超时，单位毫秒，0表示无穷大，不超时
spring.rabbitmq.connection-timeout=10000
#是否启用【发布确认】
spring.rabbitmq.publisher-confirms=true
#是否启用【发布返回】
spring.rabbitmq.publisher-returns=true
#rabbitmq通知进行存储的队列
rabbitmq.queue=realtime
#rabbitmq扇形交换机名称
rabbitmq.fanoutExchange=realtimeFanoutExchange

#websocket配置
#访问路径(可多个,逗号分隔,默认为/websocket)
websocket.endpoint=/websocketJS,/websocket
#跨域(默认为*支持全跨域)
websocket.allowedOrigins=*
#自定义调度器,线程池线程数(默认为1)
websocket.taskpoolSize=1
#线程名前缀(默认为websocket-thread-)
websocket.taskThreadNamePrefix=websocket-thread-
#消息队列的前缀(可多个,逗号分隔,默认为/topic)
websocket.enableSimpleBroker=/topic
#server,服务器端最小能保证发的心跳间隔毫秒数
websocket.serverHeartbeat=10000
#client,客户端最小能保证发的心跳间隔毫秒数
webscoket.clientHeartbeat=10000
#应用服务器的地址前缀,客户端消息或请求,用于@MessageMapping(可多个,逗号分隔,默认为/app)
webscoket.applicationDestinationPrefixes=/app
#设置消息缓存的字节数大小 字节(默认为10240)
webscoket.messageSizeLimit=10240
#设置消息缓存的字节数大小 字节(默认为10240)
webscoket.sendBufferSizeLimit=10240
#设置消息发送会话超时时间,毫秒(默认为10000)
webscoket.sendTimeLimit=10000
#配置消息线程池
#核心线程池,当线程数小于此配置时,不管线程中有无空闲的线程,都会产生新线程处理任务(默认10)
webscoket.corePoolSize=10
#线程池最大数,当线程池数等于此配置时,不会产生新线程(默认为20)
webscoket.maxPoolSize=20
#线程池维护线程所允许的空闲时间,单位秒(默认为60)
webscoket.keepAliveSeconds=60